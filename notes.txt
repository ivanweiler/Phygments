Goals
- highlight html+js+php mixed code with Pygments php port
- make full Pygmants php port with community help

Roadmap
- define structure similar to Pygments - DONE
- implement lexer abstract, regex lexer and basic html lexer - DONE
- html formatter and html lexer without any guess or file load functionality - DONE
- other web-relevant lexers - html, php, js .. - DONE
- consider non-generator version? (php<5.5) - NO, too much work
- other Pygments functionalities (Filters, main Formaters, language detection, etc.)
- implement and test all languages - community help needed
- unicode support?

Current
- solve STANDARD_TYPES to Token map problem, finish Styles logic - DONE
- finalize bygroups, calls, includes, etc. - DONE
- I'm not too happy how Token aliases are implemented - DONE (it's ok)
- fix Php lexer - DONE
- check and fix all regex definitions (\ and #) - DONE
- finalize HtmlPhp lexer + Delegating - DONE?
- finalize styles switching - DONE
- implement guess lexer functionality - DROPED
- cleanup + initial beta release

- Style is initialized twice in Delegating lexers !! fix

New
- drop mimetypes, not needed
- drop guess_lexer, most of them works only for full files
- drop style classes, implement css version ? or html5 formatter
- drop plugins
- simplify, modernize


Lexer convert
# => \#  no?
r'\\' => \\\\ yes

Every r'\' needs to be written as '\\' in PHP.
I converted few r'\#XYZ' to '#XYZ'; is # special preg char in python?? 

RegexLexer match logic notes
Pythons re.match() is matching start of the string, Phps preg_match() is matching whole string. 
We can always catch PREG_OFFSET_CAPTURE and compare it to zero, but engine is going through whole
string all the time, can we optimize that?

#\GPATTERN_HERE#m should be ok?


