\$+[a-zA-Z_][a-zA-Z0-9_]*
$i
Token.Name.Variable	u'$i'
\s+
 
Token.Text	u' '
[~!%^&*+=|:.<>/?@-]+
=
Token.Operator	u'='
\s+
 
Token.Text	u' '
\d+
8
Token.Literal.Number.Integer	u'8'
[\[\]{}();,]+
;
Token.Punctuation	u';'
\s+


Token.Text	u'\n'
(and|E_PARSE|old_function|E_ERROR|or|as|E_WARNING|parent|eval|PHP_OS|break|exit|case|extends|PHP_VERSION|cfunction|FALSE|print|for|require|continue|foreach|require_once|declare|return|default|static|do|switch|die|stdClass|echo|else|TRUE|elseif|var|empty|if|xor|enddeclare|include|virtual|endfor|include_once|while|endforeach|global|__FILE__|endif|list|__LINE__|endswitch|new|__sleep|endwhile|not|array|__wakeup|E_ALL|NULL|final|php_user_filter|interface|implements|public|private|protected|abstract|clone|try|catch|throw|this|use|namespace|trait)\b
if
Token.Keyword	u'if'
[\[\]{}();,]+
(
Token.Punctuation	u'('
\$+[a-zA-Z_][a-zA-Z0-9_]*
$i
Token.Name.Variable	u'$i'
[\[\]{}();,]+
)
Token.Punctuation	u')'
\s+
 
Token.Text	u' '
[\[\]{}();,]+
{
Token.Punctuation	u'{'
\s+

	
Token.Text	u'\n\t'
(and|E_PARSE|old_function|E_ERROR|or|as|E_WARNING|parent|eval|PHP_OS|break|exit|case|extends|PHP_VERSION|cfunction|FALSE|print|for|require|continue|foreach|require_once|declare|return|default|static|do|switch|die|stdClass|echo|else|TRUE|elseif|var|empty|if|xor|enddeclare|include|virtual|endfor|include_once|while|endforeach|global|__FILE__|endif|list|__LINE__|endswitch|new|__sleep|endwhile|not|array|__wakeup|E_ALL|NULL|final|php_user_filter|interface|implements|public|private|protected|abstract|clone|try|catch|throw|this|use|namespace|trait)\b
echo
Token.Keyword	u'echo'
\s+
 
Token.Text	u' '
\d+
123
Token.Literal.Number.Integer	u'123'
[\[\]{}();,]+
;
Token.Punctuation	u';'
\s+


Token.Text	u'\n'
[\[\]{}();,]+
}
Token.Punctuation	u'}'
\s+


Token.Text	u'\n'
(and|E_PARSE|old_function|E_ERROR|or|as|E_WARNING|parent|eval|PHP_OS|break|exit|case|extends|PHP_VERSION|cfunction|FALSE|print|for|require|continue|foreach|require_once|declare|return|default|static|do|switch|die|stdClass|echo|else|TRUE|elseif|var|empty|if|xor|enddeclare|include|virtual|endfor|include_once|while|endforeach|global|__FILE__|endif|list|__LINE__|endswitch|new|__sleep|endwhile|not|array|__wakeup|E_ALL|NULL|final|php_user_filter|interface|implements|public|private|protected|abstract|clone|try|catch|throw|this|use|namespace|trait)\b
foreach
Token.Keyword	u'foreach'
[\[\]{}();,]+
(
Token.Punctuation	u'('
(and|E_PARSE|old_function|E_ERROR|or|as|E_WARNING|parent|eval|PHP_OS|break|exit|case|extends|PHP_VERSION|cfunction|FALSE|print|for|require|continue|foreach|require_once|declare|return|default|static|do|switch|die|stdClass|echo|else|TRUE|elseif|var|empty|if|xor|enddeclare|include|virtual|endfor|include_once|while|endforeach|global|__FILE__|endif|list|__LINE__|endswitch|new|__sleep|endwhile|not|array|__wakeup|E_ALL|NULL|final|php_user_filter|interface|implements|public|private|protected|abstract|clone|try|catch|throw|this|use|namespace|trait)\b
array
Token.Keyword	u'array'
[\[\]{}();,]+
(
Token.Punctuation	u'('
'([^'\\]*(?:\\.[^'\\]*)*)'
'lol'
Token.Literal.String.Single	u"'lol'"
[\[\]{}();,]+
)
Token.Punctuation	u')'
\s+
 
Token.Text	u' '
(and|E_PARSE|old_function|E_ERROR|or|as|E_WARNING|parent|eval|PHP_OS|break|exit|case|extends|PHP_VERSION|cfunction|FALSE|print|for|require|continue|foreach|require_once|declare|return|default|static|do|switch|die|stdClass|echo|else|TRUE|elseif|var|empty|if|xor|enddeclare|include|virtual|endfor|include_once|while|endforeach|global|__FILE__|endif|list|__LINE__|endswitch|new|__sleep|endwhile|not|array|__wakeup|E_ALL|NULL|final|php_user_filter|interface|implements|public|private|protected|abstract|clone|try|catch|throw|this|use|namespace|trait)\b
as
Token.Keyword	u'as'
\s+
 
Token.Text	u' '
\$+[a-zA-Z_][a-zA-Z0-9_]*
$x
Token.Name.Variable	u'$x'
[\[\]{}();,]+
)
Token.Punctuation	u')'
\s+
 
Token.Text	u' '
[\[\]{}();,]+
{
Token.Punctuation	u'{'
\s+
 
Token.Text	u' '
\$+[a-zA-Z_][a-zA-Z0-9_]*
$x
Token.Name.Variable	u'$x'
[~!%^&*+=|:.<>/?@-]+
++
Token.Operator	u'++'
[\[\]{}();,]+
;
Token.Punctuation	u';'
\s+
 
Token.Text	u' '
[\[\]{}();,]+
}
Token.Punctuation	u'}'
\s+


Token.Text	u'\n'
